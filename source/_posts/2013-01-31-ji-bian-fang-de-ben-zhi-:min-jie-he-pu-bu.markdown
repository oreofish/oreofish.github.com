---
layout: null
title: "激辩方得本质：敏捷对瀑布，轻量级对传统"
date: 2013-01-31 20:08
comments: true
categories: 
---

《目标》这本书中，那个几乎不露面的先知型顾问几乎没有出现过，而他引导主人公解决问题只通过一个方式：提问。好的问题就已经是一半答案了。

这几天与人合作一个新项目，在正式启动前，关于这个项目的需求就已经进行了很多讨论，沟通上没有问题，但是项目正式启动那天，一个很资深的同事主持会议，讨论订计划，列难点，分任务的时候，我突然觉得不对了，他说的方法都是对的，都是标准项目管理、CMM中的方法，都是经过多年实践证明的对的方法，但是放在我们这个移动互联的项目上，就让我觉得彻底不对了。就像水和油，放得到一起也融不到一起。

我曾经实践过一段时间的敏捷，那次实践虽然产品完成了，但是从方法的角度讲是失败的。后来我反思过失败的原因，可以列出很多，最主要的，是敏捷执行错了，没有了市场和用户的环节，只有开发和测试过程，得到的只能是一个产品，而不是符合市场需求的产品。那之后我对敏捷用的就很谨慎，一般不用全部，而只用部分，变通为一种加强沟通和管理的方法。限于公司情况，也只能如此。但是这次这个新项目的特点非常适合敏捷方法，如果用传统项目管理的方法，等于注定了败局。于是我与这个资深的同事开始争论项目如何执行，我们讨论用什么方法，讨论具体执行步骤的过程，几乎就是一次敏捷与瀑布，轻型项目管理与传统项目管理的观念对决。感谢这次激辩，让我对敏捷的理解更加深入，越来越领悟到敏捷背后隐藏的深意。

我学习过项目管理的课程，在我初带队伍的时候，想把学到的知识用于实践，甘特图是一个很有用的工具，我却发现怎么也用不到软件开发的过程中去，有种格格不入的感觉，反而简单的TODO list这更容易用起来。所以我对敏捷的理解就是一个简化了的项目管理过程，本质上他们并不冲突，但是软件开发过程中仅有的关键资源就是人，敏捷中用所有人参加所有部分消除了人的关键性，也就没有关键资源了。软件项目很容易分解，可以部分完成，敏捷就尽量缩短项目周期，强迫任务细化，使项目可迭代，同时也天然的避免了进度失控、过度设计、过度开发。软件项目的改动和呈现几乎零成本，就要求尽快交付得到反馈，以此保证项目不跑偏，不需要前期过于冗长的调研。如果软件项目恰好选用了新型的动态语言，代码量成数量级的减少，可读性大大提升，这个时候文档就没什么用了，敏捷就不强调文档的作用了。当先圣先贤们分析软件项目的特点，发现传统项目要管理的很多变量都已经不存在的时候，他们发现传统项目管理这么重的方法已经不必要，甚至是在阻碍软件开发顺利进行，反而直接用轻量级方式很有效。

经过激辩，我要不断的证明自己的观点并经受住诘问，这个过程真的很棒，如果只是在平淡中行进，要好久都得不到这么多领悟。
