---
layout: null
title: "Web开发学习经历"
date: 2012-04-02 12:36
comments: true
categories: 
published: false
---

去年年底，公司决定尝试新的产品方向，由我带领一个小组开始尝试一些新的技术和领域。由于资源有限，这个小组只有4个人，两个有经验的工程师带两个刚毕业的新人。技术方向确定为Web开发方向，因为无论是火热的移动、传统的桌面，还是服务端云计算，都和web分不开，甚至有被web开发技术取代的趋势。我们两个有经验的工程师，都是c++出身，web开发经验仅限于曾经玩过ROR1.0，看过JS的书。探索工作就从这个基础上开始了。

第一个月
-------

#### 看书 ####

http://ruby.railstutorial.org/ruby-on-rails-tutorial-book?version=3.2#top，写的很不错，我们入门就从这本书开始了。第一周，基本上每天上午我讲一章，实际操作一遍，下午自己学习消化，有问题随时交流。因为看的英文版，进度有点慢，第一周结束的时候，老人基本能看完全部的12章，并跟着书上完成示例代码，新人就很困难。这本书完全按照BDD方式写的，先有测试后有代码，重视实践，很适合新手入门。

第二本入门书是Agile Web Development with Rails。这本书中的第一部分已经操练过了，第二部分开始是新内容。每个人都用周末时间读了一遍，理解程度各不相同。

#### 开始总是很简单 ####

恰好这个时候，公司内部想搞个竞赛，大家参与投票评选，我就建议开发个网站来做这件事，想借这个真实的项目实际演练一下队伍，于是这就成了我们的第一个开发项目。

由于都是新手，要边学边做，项目开始时我们选择结对编程的方式，基本上是一个人写，其他人在后面看。所幸ROR入门的确很容易，一些常见功能都有成型的方案，不需要自己费心思去选择，所以前几步走起来还比较顺畅。用rspec做单元测试，用devise做身份认证，再加上这个时候3.1已经应用了一段时间，网上已经可以查到一些常见问题的解答，简单的网站很快就搭起来了。这时我们碰到了一个小问题，几个将一直困扰我们的小问题：网站功能开发基本完成，可是界面如何布局，书上并没有教，我们一致认为我们的界面难看、难于理解、难以操作。经过讨论，认为这个事情程序员不专业，我们需要招一个美工设计一下。不过项目要继续，我找到了web-app-theme,加进来一看，效果很好，其实只是相对之前毫无css的那个裸页面，改进很大。但大家还是很高兴，赶紧补课学习了css，开始界面美化，那周有一次我们为了改界面忘了吃晚饭，:-)。

大致的功能完成后，第一次上线碰到了一个严重的问题：数据库编码不匹配。这个问题折腾了一天多才解决，试了各种方案和组合，最终的解决方案很简单，首先，抛弃sqlite，无论是上线系统还是开发系统，数据库都用mysql，然后，adapter换用mysql2，好了问题解决了。


这期间我们为了完成各种功能，引入了很多gem。

1. carrierwave
2. web-app-theme
3. devise
4. 

而且开始做一些前端javascript的工作，例如字数限制，开始尝试引入ajax。


